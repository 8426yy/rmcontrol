<template>
  <div class="hor-page">
    <title-bar title="指南针" show-back="{{true}}" show-right="{{true}}"></title-bar>、
    <div class="content">
      <canvas id="canvas1"></canvas>
      <div class="val">
        <text>当前方向:{{(angle/Math.PI*180).toFixed(1)}}°</text>
      </div>
      <div class="val">
         <text>{{loc}}</text>
      </div>
    </div>
  </div>
</template>
<import name="title-bar" src="../../components/common/bar/title-bar"></import>
<script>
import { drawClock, drawback } from './canvas'
import prompt from '@system.prompt'
import sensor from '@system.sensor'
import geolocation from '@system.geolocation'

export default {
  private: {
    angle: 0,
    loc:''
  },
  onShow() {
    const self = this
    geolocation.getLocation({
      success: function (data) {
        self.loc=`经度:${(data.longitude).toFixed(2)}°,纬度${(data.latitude).toFixed(2)}°`
      },
      fail: function (data, code) {
       self.loc=`位置获取失败`
      }
    })
    sensor.subscribeCompass({
      callback: function (ret) {
        if (Math.abs(ret.direction - self.angle) > 0.1) {
          self.angle = ret.direction
          self.draw()
        }

      }
    })
  },
  onHide() {
    sensor.unsubscribeCompass()
  },
  draw() {
    const canvas = this.$element('canvas1')
    const ctx = canvas.getContext('2d')
    const img = new Image()
    drawback(600, ctx, this.angle, img)
    //drawClock(600, ctx, conf)
  }
}
</script>

<style  lang="less">
@import "../../assets/styles/self.less";
.content {
  flex-direction: column;
  align-items: center;
  width: 100%;
  height: 93%;
  background-color: #ffffff;
  padding: 30px 0px 10px 0px;
}

canvas {
  height: 800px;
  width: 600px;
}

.val
{
  margin-top: 30px;
  text
  {
    font-size: 70px;
    color: #1c2438;
  }
}

</style>