<template>
    <stack>
 <div class="front" style="left:{{left}}px;top:{{top}}px" >
        </div>
        <div class="main" onresize="resize" @touchstart="mstart" @touchmove="mmove" @touchend="mend">
       
    </div>
    </stack>
    
</template>

 
<style lang="less">
.main {
    width:100% ;
    height: 100%;
  padding: 5px;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-position: center;
  background-image: url("/assets/images/rocker-back.png");
}
.front {
    
  position: absolute;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background-image: url("/assets/images/rocker-front.png");
  background-position: center;
}
</style>

<script>
function area(min, max, x) {
    if (max < min)
        return 0
    if (x < min)
        return min
    if (x > max)
        return max
    return x
}
function disarea(x, y, cx, cy, r) {
    let d = Math.pow(x - cx, 2) + Math.pow(y - cy, 2)
    if (d >= Math.pow(r, 2)) {
        let nx = (x - cx) / Math.sqrt(d) * r
        let ny = (y - cy) / Math.sqrt(d) * r
        return {
            x: nx,
            y: ny
        }
    }
    else return {
        x: x - cx,
        y: y - cy
    }
}
export default {
    props: {

    },
    data: {
        width: 100,
        height: 100,
        left: 100,
        top: 100,
        finger: -1,
        r: 50,


    },
    mstart(e) {
        console.log('center start', e)
        if (this.finger == -1) {
            if (e.changedTouches.length > 0) {
                this.finger = e.changedTouches[0].identifier
                let loc = disarea(e.changedTouches[0].offsetX, e.changedTouches[0].offsetY, this.width / 2, this.height / 2, this.r / 2)
                this.left = this.width / 4 + loc.x
                this.top = this.height / 4 + loc.y
            }

        }
        
    },
    mmove(e) {
        console.log('center move', e)
        for (let i = 0; i < e.changedTouches.length; i++) {
            if (e.changedTouches[i].identifier == this.finger) {
                let loc = disarea(e.changedTouches[i].offsetX, e.changedTouches[i].offsetY, this.width / 2, this.height / 2, this.r / 2)
                this.left = this.width / 4 + loc.x
                this.top = this.height / 4 + loc.y
                return
            }
        }

    },
    mend(e) {
             console.log('center end', e)
        if (e.changedTouches.length > 0) {
            for (let i = 0; i < e.changedTouches.length; i++) {
                if (e.changedTouches[i].identifier == this.finger) {
                    this.left = this.width / 4
                    this.top = this.height / 4
                    this.finger = -1
                    return
                }
            }

        }
   
    },
    mcancel(e) {    this.left = this.width / 4
            console.log('center cancel', e)
        this.top = this.height / 4
        this.finger = -1

    },
    resize(e) {
        this.width = e.offsetWidth
        this.height = e.offsetHeight
        this.r = Math.min(this.width, this.height) / 2
        this.left = e.offsetWidth / 4
        this.top = e.offsetHeight / 4
    },
};
</script>